{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","useState","setQuery","setMovie","isLoading","setIsLoading","isVisible","setIsVisible","fetchMovie","a","movieData","imdbID","newMovie","Title","Plot","Poster","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","disabled","length","cn","onClick","current","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b69b1941.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?apikey=8d837d8a';\n\nexport const placeholder\n= 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { FC, useState, Dispatch } from 'react';\nimport './FindMovie.scss';\n\nimport cn from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie, placeholder } from '../../api';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  setMovies: Dispatch<React.SetStateAction<Movie[]>>,\n};\n\nexport const FindMovie: FC<Props> = ({ setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const createCard = (newMovie: MovieData) => ({\n    title: newMovie.Title,\n    description: newMovie.Plot,\n    imgUrl: newMovie.Poster === 'N/A'\n      ? placeholder\n      : newMovie.Poster,\n    imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n    imdbId: newMovie.imdbID,\n  });\n\n  const fetchMovie = async (title: string) => {\n    const movieData = await getMovie(title);\n\n    if ((movieData as MovieData).imdbID) {\n      setMovie(createCard(movieData as MovieData));\n      setIsLoading(false);\n      setIsVisible(false);\n\n      return;\n    }\n\n    setIsLoading(false);\n    setIsVisible(true);\n  };\n\n  const addMovie = () => {\n    if (movie) {\n      setMovies((current) => {\n        return current.some(({ imdbId }) => imdbId === movie.imdbId)\n          ? current\n          : [...current, movie];\n      });\n      setMovie(null);\n      setQuery('');\n      setIsVisible(false);\n    }\n  };\n\n  const handleSubmit = (\n    event: React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n    fetchMovie(query);\n    setIsLoading(true);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsVisible(false);\n              }}\n            />\n          </div>\n\n          {isVisible && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {'Can\\'t find a movie with such a title'}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query.length}\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}